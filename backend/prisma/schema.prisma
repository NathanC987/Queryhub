generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  username  String    @unique
  email     String    @unique
  password  String
  bio       String?
  questions Question[]
  answers   Answer[]
  votes     Vote[]
}

model Question {
  id         Int          @id @default(autoincrement())
  title      String
  body       String
  createdAt  DateTime     @default(now())
  author     User         @relation(fields: [authorId], references: [id])
  authorId   Int
  answers    Answer[]     
  tags       QuestionTag[]
  votes      Vote[]
}

model Answer {
  id         Int       @id @default(autoincrement())
  body       String
  createdAt  DateTime  @default(now())
  question   Question  @relation(fields: [questionId], references: [id])
  questionId Int
  author     User      @relation(fields: [authorId], references: [id])
  authorId   Int
  votes      Vote[]
}

model Vote {
  id         Int       @id @default(autoincrement())
  value      Int       // 1 for upvote, -1 for downvote
  user       User      @relation(fields: [userId], references: [id])
  userId     Int
  question   Question? @relation(fields: [questionId], references: [id])
  questionId Int?
  answer     Answer?   @relation(fields: [answerId], references: [id])
  answerId   Int?

  @@unique([userId, questionId])
  @@unique([userId, answerId])
}

model Tag {
  id        Int          @id @default(autoincrement())
  name      String       @unique
  questions QuestionTag[]
}

model QuestionTag {
  id         Int      @id @default(autoincrement())
  question   Question @relation(fields: [questionId], references: [id])
  questionId Int
  tag        Tag      @relation(fields: [tagId], references: [id])
  tagId      Int
}